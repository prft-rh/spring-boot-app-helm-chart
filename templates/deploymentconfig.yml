kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  annotations:
    {{- include "spring-boot.annotations" . | nindent 4 }}
  name: {{ include "spring-boot.fullname" . }}
  labels:
    {{- include "spring-boot.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  strategy:
    type: Rolling
    rollingParams:
      updatePeriodSeconds: 1
      intervalSeconds: 1
      timeoutSeconds: 600
      maxUnavailable: 25%
      maxSurge: 25%
    resources: {}
    activeDeadlineSeconds: 21600
  revisionHistoryLimit: 10
  test: false
  selector:
    {{- include "spring-boot.selectorLabels" . | nindent 4 }}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "spring-boot.labels" . | nindent 8 }}
        version: default
    spec:
{{- if .Values.serviceAccount }}
{{- if .Values.serviceAccount.name }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
{{- end }}
{{- end }}
      volumes:
        - name: spring-config
          configMap:
            name: {{ include "spring-boot.fullname" . }}
            defaultMode: 420
            optional: true
        - name: spring-secrets
          secret:
            secretName: {{ include "spring-boot.fullname" . }}
            defaultMode: 420
            optional: true
      containers:
        - name: {{ .Chart.Name }}
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: {{ .Values.management.port }}
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: {{ .Values.management.port }}
              scheme: HTTP
            initialDelaySeconds: 180
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          image: "{{ .Values.container.image }}"
          ports:
            - name: http-service
              containerPort: {{ .Values.service.port }}
              protocol: TCP
            - name: http-management
              containerPort: {{ .Values.management.port }}
              protocol: TCP
          env:
            - name: SPRING_APPLICATION_NAME
              value: {{ include "spring-boot.fullname" . }}
            - name: MANAGEMENT_METRICS_TAGS_application
              value: {{ include "spring-boot.fullname" . }}
            - name: MANAGEMENT_METRICS_TAGS_operator
              value: spring-boot
            - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
              value: "health,info,prometheus"
            - name: SERVER_PORT
              value: "{{ .Values.service.port }}"
            - name: MANAGEMENT_SERVER_PORT
              value: "{{ .Values.management.port }}"
            - name: SPRING_CLOUD_KUBERNETES_CONFIG_ENABLEAPI
              value: "false"
            - name: SPRING_CLOUD_KUBERNETES_ENABLED
              value: "true"
            - name: SPRING_CONFIG_LOCATION
              value: "optional:file:///etc/config/application.properties,optional:file:///etc/secrets/application.properties"
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            {{- range $k, $v := .Values.env }}
            - name: {{ $v.name }}
              value: {{ $v.value | quote }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: spring-config
              mountPath: /etc/config
            - name: spring-secrets
              mountPath: /etc/secrets
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
      
{{- if .Values.version.name }}
{{- $top := . }}
---
kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  annotations:
    {{- include "spring-boot.annotations" . | nindent 4 }}
    lastDeployed: {{ now | quote }}
  name: {{ include "spring-boot.fullname" . }}-{{ .Values.version.name }}
  labels:
    {{- include "spring-boot.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  strategy:
    type: Rolling
    rollingParams:
      updatePeriodSeconds: 1
      intervalSeconds: 1
      timeoutSeconds: 600
      maxUnavailable: 25%
      maxSurge: 25%
    resources: {}
    activeDeadlineSeconds: 21600
  revisionHistoryLimit: 10
  test: false
  selector:
    {{- include "spring-boot.selectorLabels" . | nindent 4 }}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "spring-boot.labels" . | nindent 8 }}
        version: {{ .Values.version.name }}
    spec:
      volumes:
        - name: spring-config
          configMap:
            name: {{ include "spring-boot.fullname" . }}-{{ .Values.version.name }}
            defaultMode: 420
            optional: true
        - name: spring-secrets
          configMap:
            name: {{ include "spring-boot.fullname" . }}-{{ .Values.version.name }}
            defaultMode: 420
            optional: true
      containers:
        - name: {{ .Chart.Name }}
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: {{ .Values.management.port }}
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: {{ .Values.management.port }}
              scheme: HTTP
            initialDelaySeconds: 180
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          image: "{{ .Values.version.image }}"
          ports:
            - name: http-service
              containerPort: {{ .Values.service.port }}
              protocol: TCP
            - name: http-management
              containerPort: {{ .Values.management.port }}
              protocol: TCP
          env:
            env:
            - name: SPRING_APPLICATION_NAME
              value: {{ include "spring-boot.fullname" . }}-{{ .Values.version.name }}
            - name: MANAGEMENT_METRICS_TAGS_application
              value: {{ include "spring-boot.fullname" . }}-{{ .Values.version.name }}
            - name: MANAGEMENT_METRICS_TAGS_operator
              value: spring-boot
            - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
              value: "health,info,prometheus"
            - name: SERVER_PORT
              value: "{{ .Values.service.port }}"
            - name: MANAGEMENT_SERVER_PORT
              value: "{{ .Values.management.port }}"
            - name: SPRING_CLOUD_KUBERNETES_CONFIG_ENABLEAPI
              value: "false"
            - name: SPRING_CLOUD_KUBERNETES_ENABLED
              value: "true"
            - name: SPRING_CONFIG_LOCATION
              value: "optional:file:///etc/config/application.properties,optional:file:///etc/secrets/application.properties"
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            {{- range $k, $v := .Values.env }}
            - name: {{ $v.name }}
              value: {{ $v.value | quote }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: spring-config
              mountPath: /etc/config
            - name: spring-secrets
              mountPath: /etc/secrets
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
{{- end }}